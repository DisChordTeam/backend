name: Java CI with Gradle

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set application.yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: src/main/resources/application.yml
        env:
          spring.datasource.url: ${{ secrets.RDS_URL }}
          spring.datasource.username: ${{ secrets.RDS_USERNAME }}
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
      - name: Set docker-compose.yml file
        uses: microsoft/variable-substitution@v1
        with:
          files: docker-compose.yml
        env:
          services.backend.environment.SPRING_DATASOURCE_URL: ${{ secrets.RDS_URL }}
          services.backend.environment.SPRING_DATASOURCE_USERNAME: ${{ secrets.RDS_USERNAME }}
          services.backend.environment.SPRING_DATASOURCE_PASSWORD: ${{ secrets.RDS_PASSWORD }}
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build -x test
      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_PASSWORD }}
          docker compose build
          docker tag hunnit/dischord hunnit/dischord:${GITHUB_SHA::6}
          docker push hunnit/dischord:${GITHUB_SHA::6}
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          envs: GITHUB_SHA
          debug: true
          script: |
            docker pull hunnit/dischord:${GITHUB_SHA::6}
            docker tag hunnit/dischord:${GITHUB_SHA::6} dischord
            docker stop server
            docker rm -f server
            docker run -d --name server -p 8080:8080 dischord